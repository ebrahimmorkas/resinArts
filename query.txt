import React, { useState } from 'react';
import { Loader2, RefreshCw, MoreHorizontal } from 'lucide-react';

const LoadingSpinners = () => {
  const [activeDemo, setActiveDemo] = useState(null);

  const simulateLoading = (spinnerType) => {
    setActiveDemo(spinnerType);
    setTimeout(() => {
      setActiveDemo(null);
    }, 3000);
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-gray-50 to-gray-100 py-12 px-4 sm:px-6 lg:px-8">
      <div className="max-w-6xl mx-auto">
        {/* Header */}
        <div className="text-center mb-12">
          <h1 className="text-4xl font-bold text-gray-900 mb-4">Loading Spinners</h1>
          <p className="text-xl text-gray-600">Professional loading indicators for modern applications</p>
        </div>

        {/* Spinner Grid */}
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
          
          {/* Classic Spin */}
          <div className="bg-white rounded-2xl shadow-lg p-8 text-center hover:shadow-xl transition-shadow">
            <h3 className="text-lg font-semibold text-gray-900 mb-6">Classic Spin</h3>
            <div className="flex justify-center items-center h-24 mb-6">
              <div className="animate-spin rounded-full h-12 w-12 border-4 border-blue-200 border-t-blue-600"></div>
            </div>
            <button
              onClick={() => simulateLoading('classic')}
              className="px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors"
            >
              Demo Loading
            </button>
          </div>

          {/* Pulse Ring */}
          <div className="bg-white rounded-2xl shadow-lg p-8 text-center hover:shadow-xl transition-shadow">
            <h3 className="text-lg font-semibold text-gray-900 mb-6">Pulse Ring</h3>
            <div className="flex justify-center items-center h-24 mb-6">
              <div className="relative">
                <div className="w-12 h-12 border-4 border-purple-200 rounded-full"></div>
                <div className="absolute top-0 left-0 w-12 h-12 border-4 border-transparent border-t-purple-600 rounded-full animate-spin"></div>
                <div className="absolute top-2 left-2 w-8 h-8 border-4 border-transparent border-t-purple-400 rounded-full animate-spin animate-reverse"></div>
              </div>
            </div>
            <button
              onClick={() => simulateLoading('pulse')}
              className="px-4 py-2 bg-purple-600 text-white rounded-lg hover:bg-purple-700 transition-colors"
            >
              Demo Loading
            </button>
          </div>

          {/* Dots Wave */}
          <div className="bg-white rounded-2xl shadow-lg p-8 text-center hover:shadow-xl transition-shadow">
            <h3 className="text-lg font-semibold text-gray-900 mb-6">Dots Wave</h3>
            <div className="flex justify-center items-center h-24 mb-6">
              <div className="flex space-x-1">
                <div className="w-3 h-3 bg-green-600 rounded-full animate-bounce"></div>
                <div className="w-3 h-3 bg-green-600 rounded-full animate-bounce" style={{ animationDelay: '0.1s' }}></div>
                <div className="w-3 h-3 bg-green-600 rounded-full animate-bounce" style={{ animationDelay: '0.2s' }}></div>
              </div>
            </div>
            <button
              onClick={() => simulateLoading('dots')}
              className="px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors"
            >
              Demo Loading
            </button>
          </div>

          {/* Gradient Spin */}
          <div className="bg-white rounded-2xl shadow-lg p-8 text-center hover:shadow-xl transition-shadow">
            <h3 className="text-lg font-semibold text-gray-900 mb-6">Gradient Spin</h3>
            <div className="flex justify-center items-center h-24 mb-6">
              <div className="w-12 h-12 rounded-full bg-gradient-to-r from-pink-500 to-violet-500 animate-spin">
                <div className="w-10 h-10 bg-white rounded-full m-1"></div>
              </div>
            </div>
            <button
              onClick={() => simulateLoading('gradient')}
              className="px-4 py-2 bg-gradient-to-r from-pink-500 to-violet-500 text-white rounded-lg hover:from-pink-600 hover:to-violet-600 transition-colors"
            >
              Demo Loading
            </button>
          </div>

          {/* Square Flip */}
          <div className="bg-white rounded-2xl shadow-lg p-8 text-center hover:shadow-xl transition-shadow">
            <h3 className="text-lg font-semibold text-gray-900 mb-6">Square Flip</h3>
            <div className="flex justify-center items-center h-24 mb-6">
              <div className="w-8 h-8 bg-orange-500 animate-spin" style={{ 
                animationDuration: '1.2s',
                clipPath: 'polygon(0 0, 100% 0, 50% 50%, 0 100%)'
              }}></div>
            </div>
            <button
              onClick={() => simulateLoading('square')}
              className="px-4 py-2 bg-orange-600 text-white rounded-lg hover:bg-orange-700 transition-colors"
            >
              Demo Loading
            </button>
          </div>

          {/* Orbit */}
          <div className="bg-white rounded-2xl shadow-lg p-8 text-center hover:shadow-xl transition-shadow">
            <h3 className="text-lg font-semibold text-gray-900 mb-6">Orbit</h3>
            <div className="flex justify-center items-center h-24 mb-6">
              <div className="relative w-12 h-12">
                <div className="absolute top-0 left-1/2 w-3 h-3 bg-cyan-500 rounded-full transform -translate-x-1/2 animate-spin origin-bottom" style={{ transformOrigin: '50% 24px' }}></div>
                <div className="absolute top-1/2 left-1/2 w-2 h-2 bg-cyan-700 rounded-full transform -translate-x-1/2 -translate-y-1/2"></div>
              </div>
            </div>
            <button
              onClick={() => simulateLoading('orbit')}
              className="px-4 py-2 bg-cyan-600 text-white rounded-lg hover:bg-cyan-700 transition-colors"
            >
              Demo Loading
            </button>
          </div>

          {/* Bars Scale */}
          <div className="bg-white rounded-2xl shadow-lg p-8 text-center hover:shadow-xl transition-shadow">
            <h3 className="text-lg font-semibold text-gray-900 mb-6">Bars Scale</h3>
            <div className="flex justify-center items-center h-24 mb-6">
              <div className="flex items-end space-x-1">
                <div className="w-2 h-8 bg-red-500 animate-pulse"></div>
                <div className="w-2 h-6 bg-red-500 animate-pulse" style={{ animationDelay: '0.1s' }}></div>
                <div className="w-2 h-10 bg-red-500 animate-pulse" style={{ animationDelay: '0.2s' }}></div>
                <div className="w-2 h-4 bg-red-500 animate-pulse" style={{ animationDelay: '0.3s' }}></div>
                <div className="w-2 h-8 bg-red-500 animate-pulse" style={{ animationDelay: '0.4s' }}></div>
              </div>
            </div>
            <button
              onClick={() => simulateLoading('bars')}
              className="px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 transition-colors"
            >
              Demo Loading
            </button>
          </div>

          {/* Ripple */}
          <div className="bg-white rounded-2xl shadow-lg p-8 text-center hover:shadow-xl transition-shadow">
            <h3 className="text-lg font-semibold text-gray-900 mb-6">Ripple Effect</h3>
            <div className="flex justify-center items-center h-24 mb-6">
              <div className="relative w-12 h-12">
                <div className="absolute inset-0 border-2 border-indigo-400 rounded-full animate-ping"></div>
                <div className="absolute inset-2 border-2 border-indigo-500 rounded-full animate-ping" style={{ animationDelay: '0.3s' }}></div>
                <div className="absolute inset-4 w-4 h-4 bg-indigo-600 rounded-full"></div>
              </div>
            </div>
            <button
              onClick={() => simulateLoading('ripple')}
              className="px-4 py-2 bg-indigo-600 text-white rounded-lg hover:bg-indigo-700 transition-colors"
            >
              Demo Loading
            </button>
          </div>

          {/* Hourglass */}
          <div className="bg-white rounded-2xl shadow-lg p-8 text-center hover:shadow-xl transition-shadow">
            <h3 className="text-lg font-semibold text-gray-900 mb-6">Hourglass</h3>
            <div className="flex justify-center items-center h-24 mb-6">
              <div className="w-8 h-8 border-4 border-yellow-500 rounded-full animate-spin border-t-transparent border-r-transparent"></div>
            </div>
            <button
              onClick={() => simulateLoading('hourglass')}
              className="px-4 py-2 bg-yellow-600 text-white rounded-lg hover:bg-yellow-700 transition-colors"
            >
              Demo Loading
            </button>
          </div>
        </div>

        {/* Full Screen Loading Overlays */}
        <div className="mt-16">
          <h2 className="text-2xl font-bold text-gray-900 text-center mb-8">Full Screen Loading States</h2>
          <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
            
            {/* Minimal Overlay */}
            <div className="bg-white rounded-xl shadow-lg p-6 text-center">
              <h4 className="font-semibold text-gray-900 mb-4">Minimal Overlay</h4>
              <button
                onClick={() => simulateLoading('overlay-minimal')}
                className="px-4 py-2 bg-gray-800 text-white rounded-lg hover:bg-gray-900 transition-colors"
              >
                Show Overlay
              </button>
            </div>

            {/* Branded Overlay */}
            <div className="bg-white rounded-xl shadow-lg p-6 text-center">
              <h4 className="font-semibold text-gray-900 mb-4">Branded Overlay</h4>
              <button
                onClick={() => simulateLoading('overlay-branded')}
                className="px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors"
              >
                Show Overlay
              </button>
            </div>

            {/* Progress Overlay */}
            <div className="bg-white rounded-xl shadow-lg p-6 text-center">
              <h4 className="font-semibold text-gray-900 mb-4">Progress Overlay</h4>
              <button
                onClick={() => simulateLoading('overlay-progress')}
                className="px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors"
              >
                Show Overlay
              </button>
            </div>
          </div>
        </div>

        {/* Active Loading Overlays */}
        {activeDemo === 'overlay-minimal' && (
          <div className="fixed inset-0 bg-white bg-opacity-90 flex items-center justify-center z-50">
            <div className="text-center">
              <div className="animate-spin rounded-full h-16 w-16 border-4 border-gray-200 border-t-gray-800 mx-auto mb-4"></div>
              <p className="text-gray-600">Loading...</p>
            </div>
          </div>
        )}

        {activeDemo === 'overlay-branded' && (
          <div className="fixed inset-0 bg-blue-900 bg-opacity-95 flex items-center justify-center z-50">
            <div className="text-center">
              <div className="relative mb-8">
                <div className="w-20 h-20 border-4 border-blue-300 rounded-full"></div>
                <div className="absolute top-0 left-0 w-20 h-20 border-4 border-transparent border-t-white rounded-full animate-spin"></div>
              </div>
              <h3 className="text-2xl font-bold text-white mb-2">Loading Your Dashboard</h3>
              <p className="text-blue-200">Please wait while we prepare your data...</p>
              <div className="mt-6 w-64 bg-blue-800 rounded-full h-1 mx-auto">
                <div className="bg-white h-1 rounded-full animate-pulse" style={{ width: '60%' }}></div>
              </div>
            </div>
          </div>
        )}

        {activeDemo === 'overlay-progress' && (
          <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
            <div className="bg-white rounded-2xl p-8 text-center max-w-sm mx-4">
              <div className="relative w-24 h-24 mx-auto mb-6">
                <div className="absolute inset-0 border-4 border-green-200 rounded-full"></div>
                <div className="absolute inset-0 border-4 border-transparent border-t-green-500 rounded-full animate-spin"></div>
                <div className="absolute inset-0 flex items-center justify-center">
                  <span className="text-2xl font-bold text-green-600">75%</span>
                </div>
              </div>
              <h3 className="text-xl font-semibold text-gray-900 mb-2">Processing Data</h3>
              <p className="text-gray-600 mb-4">Analyzing 1,247 records...</p>
              <div className="w-full bg-gray-200 rounded-full h-2">
                <div className="bg-green-500 h-2 rounded-full transition-all duration-300" style={{ width: '75%' }}></div>
              </div>
              <p className="text-sm text-gray-500 mt-2">Step 3 of 4 complete</p>
            </div>
          </div>
        )}
      </div>

      {/* Custom CSS for animations */}
      <style>{`
        @keyframes spin-reverse {
          from {
            transform: rotate(360deg);
          }
          to {
            transform: rotate(0deg);
          }
        }
        .animate-reverse {
          animation: spin-reverse 1s linear infinite;
        }
      `}</style>
    </div>
  );
};

export default LoadingSpinners;